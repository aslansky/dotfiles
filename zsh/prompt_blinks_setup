# https://github.com/blinks zsh theme

function prompt_char {
    git branch >/dev/null 2>/dev/null && echo '±' && return
    hg root >/dev/null 2>/dev/null && echo '☿' && return
    svn info >/dev/null 2>/dev/null && echo '✻' && return
    echo ' '
}

# ----------------------------------------------------------------------------
# svn prompt
# based on: https://gist.github.com/1156969
# with help from: http://andrewray.me/bash-prompt-builder/index.html
#
# Only the root directory holds the .svn repository. We need to test each directory in the current
# directory's path to determine if we are under Subversion control.
# ----------------------------------------------------------------------------
function svn_prompt_info {
    # Set up defaults
    local svn_branch=""
    local svn_repository=""
    local svn_version=""
    local svn_change=""

    # if `svn info` returns more than 1 line, we are under subversion control
    testsvn=`svn info > /dev/null 2>&1 | wc -l`
    if [ $testsvn -gt 1 ] ; then
        # query svn info and parse the results
        svn_branch=`svn info | grep '^URL:' | egrep -o '((tags|branches)/[^/]+|trunk).*' | sed -E -e 's/^(branches|tags)\///g'`
        svn_repository=`svn info | grep '^Repository Root:' | egrep -o '(http|https|file|svn|svn+ssh)/[^/]+' | egrep -o '[^/]+$'`
        svn_version=`svnversion -n`

        # this is the slowest test of the bunch
        change_count=`svn status | grep "?\|\!\|M\|A" | wc -l`
        if [ "$change_count" != "       0" ]; then
            svn_change=" [dirty]"
        else
            svn_change=""
        fi

        # show the results
        echo "%F{blue}$svn_repository/$svn_branch @ $svn_version%f%F{yellow}$svn_change%f"

    fi
}

function prompt_tasks {
  tasks=`t  > /dev/null 2>&1 | wc -l | sed -e's/ *//'`
  color="green"
  if [ $tasks -gt 5 ]; then
    color="red"
  fi
  echo "%F{$color}T:$tasks%f"
}

function prompt_blinks_precmd {
  # Check for untracked files or updated submodules since vcs_info does not.
  if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    branch_format="(%F{blue}%s:%f%F{green}%b%f%u%c●%f)"
  else
    branch_format="(%F{blue}%s:%f%F{green}%b%f%u%c)"
  fi

  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
  fi
}

function prompt_blinks_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  # Add hook for calling vcs_info before each command.
  add-zsh-hook precmd prompt_blinks_precmd

  # editor
  zstyle ':prezto:module:editor' completing '%B%F{red}...%f%b'

  # git
  zstyle ':prezto:module:git' dirty '%F{yellow}[dirty]%f'
  zstyle ':prezto:module:git' branch '%F{blue}%b%f'
  zstyle ':prezto:module:git' position ':%F{green}%p%f'

  zstyle ':prezto:module:git' action ':%F{yellow}%s%f%'
  zstyle ':prezto:module:git' commit ':%F{green}%.7c%f'

  zstyle ':prezto:module:git' added ' %F{green}✚:%a%f'
  zstyle ':prezto:module:git' ahead ' %F{yellow}⬆:%A%f'
  zstyle ':prezto:module:git' behind ' %F{yellow}⬇:%b%f'
  zstyle ':prezto:module:git' deleted ' %F{red}✖:%d%f'
  zstyle ':prezto:module:git' modified ' %F{blue}✱:%m%f'
  zstyle ':prezto:module:git' renamed ' %F{magenta}➜:%r%f'
  zstyle ':prezto:module:git' stashed ' %F{cyan}✭:%S%f'
  zstyle ':prezto:module:git' unmerged ' %F{yellow}═:%U%f'
  zstyle ':prezto:module:git' untracked ' %F{white}◼:%u%f'

  zstyle ':prezto:module:git' info \
    'prompt' ' on %b %D %C' \
    'rprompt' '%A%B%S%a%d%m%r%U%u  '

  # Define prompts.
  PROMPT='%{%f%k%b%}
%{%K{black}%F{blue}%}%n%f at %F{yellow}%m%f in %F{green}%50<...<%~%<<%f${git_info:+${(e)git_info[prompt]}}$(svn_prompt_info)%E%k
%{%K{black}%}%F{blue}$(prompt_char)%f%{%K{black}%} %#%{%f%k%b%} '

  RPROMPT='${git_info[rprompt]}%T $(prompt_tasks) %k'
}

prompt_blinks_setup "$@"

